---
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { LogIn } from "lucide-react";
import { MobileNavbar } from "@/islands/layout/MobileNavbar";
import { getSession } from "auth-astro/server";
import { UserProfileIsland } from "@/islands/layout/UserProfile";
import { AUTH_ENABLED } from "astro:env/server";
import Logo from "@/assets/logo.svg";
import { Image } from "astro:assets";

import Github from "simple-icons-astro/Github";

const currentPath = Astro.url.pathname;

const shouldShow = {
  signin: AUTH_ENABLED && currentPath !== "/login",
  user: false,
};

const session = AUTH_ENABLED ? await getSession(Astro.request) : null;
if (session?.user) {
  shouldShow.signin = false;
  shouldShow.user = true;
}
---

<div class="container mx-auto max-w-7xl z-10">
  <Card
    className="bg-background py-3 px-4 border-0 flex items-center justify-between gap-6 rounded-2xl mt-5"
  >
    <ul class="hidden md:flex items-center gap-10 text-card-foreground">
      <li class="text-primary font-medium">
        <a href="/" class="flex items-center gap-2">
          <Image
            src={Logo}
            alt="StackedLayer"
            width={36}
            height={36}
            class="w-8 h-8 aspect-square min-h-[24px]"
          />
          <h1 class="text-xl font-bold">StackedLayer</h1>
        </a>
      </li>
      <li>
        <a href="/#features">Features</a>
      </li>
      <li>
        <a href="/#faqs">FAQs</a>
      </li>
    </ul>

    <div class="flex items-center gap-2">
      <a href="https://www.github.com/kildall/stackedlayer" target="_blank">
        <Button
          variant="ghost"
          className="hidden md:flex items-center gap-2 mx-2"
        >
          <Github className="w-4 h-4" />
          GitHub
        </Button>
      </a>

      {
        shouldShow.signin && (
          <a href="/login" class="w-32">
            <Button
              variant="outline"
              className="hidden px-2 md:flex items-center gap-2 w-full"
            >
              <LogIn className="w-4 h-4" client:load />
              Sign In
            </Button>
          </a>
        )
      }

      {
        shouldShow.user && (
          <UserProfileIsland client:visible session={JSON.stringify(session)} />
        )
      }

      <MobileNavbar client:load currentPath={currentPath.toString()} />
    </div>
  </Card>
</div>
